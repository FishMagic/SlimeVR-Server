import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
//	id 'application'
	kotlin("jvm") version "1.6.10"
	id("org.jetbrains.compose") version "1.1.0"
	kotlin("plugin.serialization") version "1.6.10"
}

allprojects {
	repositories {
		// Use jcenter for resolving dependencies.
		// You can declare any Maven/Ivy/file repository here.
		mavenCentral()
	}
}

dependencies {
	implementation(project(":slime-java-commons"))


	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
	implementation("org.apache.commons:commons-math3:3.6.1")
	implementation("net.java.dev.jna:jna:5.10.0")
	implementation("net.java.dev.jna:jna-platform:5.10.0")
	implementation("com.illposed.osc:javaosc-core:0.8")
	implementation("com.fazecast:jSerialComm:2.9.0")
	implementation("com.google.protobuf:protobuf-java:3.19.4")
	implementation("org.java-websocket:Java-WebSocket:1.5.2")
	implementation("com.melloware:jintellitype:1.4.0")
	implementation(compose.desktop.currentOs)
	implementation("org.jetbrains.compose.material:material-icons-extended:1.1.0")
	implementation("org.jetbrains.compose.material:material-icons-extended-desktop:1.1.0")


	// Use JUnit test framework
	testImplementation(platform("org.junit:junit-bom:5.8.2"))
	testImplementation("org.junit.jupiter:junit-jupiter")
	testImplementation("org.junit.platform:junit-platform-launcher")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
}

repositories {
	mavenCentral()
}

tasks.withType<KotlinCompile> {
	kotlinOptions.jvmTarget = "17"
}

compose.desktop {
	application {
		mainClass = "me.ftmc.MainKt"
	}
}
